// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    authentication={
      Object {
        "isAuthenticated": true,
      }
    }
    job={
      Object {
        "status": "testStatus",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header
          authentication={
            Object {
              "isAuthenticated": true,
            }
          }
        />,
        <div
          className="container"
        >
          <ul
            className="flex-outer"
          >
            <li>
              <label>
                Drag and drop the archive you with to sign onto this area.
              </label>
              <FileUpload
                files={Array []}
                onFileAccepted={[Function]}
              />
            </li>
            <li>
              <p>
                What is the deployment platform this archive is meant for?
              </p>
              <ul
                className="flex-inner"
              >
                <li>
                  <input
                    id="platform-ios"
                    name="platform"
                    onChange={[Function]}
                    type="radio"
                    value="ios"
                  />
                  <label
                    htmlFor="platform-ios"
                  >
                    iOS
                  </label>
                </li>
                <li>
                  <input
                    id="platform-android"
                    name="platform"
                    onChange={[Function]}
                    type="radio"
                    value="android"
                  />
                  <label
                    htmlFor="platform-android"
                  >
                    Android
                  </label>
                </li>
              </ul>
            </li>
            <li>
              <p>
                You must complete a STRA & PIA before your production release.
              </p>
              <ul
                className="flex-inner"
              >
                <li>
                  <input
                    id="i-agree"
                    name="i-agree"
                    onChange={[Function]}
                    type="checkbox"
                    value="agree"
                  />
                  <label
                    htmlFor="i-agree"
                  >
                    Yes, I will
                  </label>
                </li>
              </ul>
            </li>
            <li>
              <button
                onClick={[Function]}
              >
                Start
              </button>
            </li>
          </ul>
          <JobStatusIndicator
            job={
              Object {
                "status": "testStatus",
              }
            }
          />
        </div>,
        <div
          className="container"
        >
          <Instruction />
        </div>,
        <Footer />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "authentication": Object {
            "isAuthenticated": true,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ul
              className="flex-outer"
            >
              <li>
                <label>
                  Drag and drop the archive you with to sign onto this area.
                </label>
                <FileUpload
                  files={Array []}
                  onFileAccepted={[Function]}
                />
              </li>
              <li>
                <p>
                  What is the deployment platform this archive is meant for?
                </p>
                <ul
                  className="flex-inner"
                >
                  <li>
                    <input
                      id="platform-ios"
                      name="platform"
                      onChange={[Function]}
                      type="radio"
                      value="ios"
                    />
                    <label
                      htmlFor="platform-ios"
                    >
                      iOS
                    </label>
                  </li>
                  <li>
                    <input
                      id="platform-android"
                      name="platform"
                      onChange={[Function]}
                      type="radio"
                      value="android"
                    />
                    <label
                      htmlFor="platform-android"
                    >
                      Android
                    </label>
                  </li>
                </ul>
              </li>
              <li>
                <p>
                  You must complete a STRA & PIA before your production release.
                </p>
                <ul
                  className="flex-inner"
                >
                  <li>
                    <input
                      id="i-agree"
                      name="i-agree"
                      onChange={[Function]}
                      type="checkbox"
                      value="agree"
                    />
                    <label
                      htmlFor="i-agree"
                    >
                      Yes, I will
                    </label>
                  </li>
                </ul>
              </li>
              <li>
                <button
                  onClick={[Function]}
                >
                  Start
                </button>
              </li>
            </ul>,
            <JobStatusIndicator
              job={
                Object {
                  "status": "testStatus",
                }
              }
            />,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <li>
                  <label>
                    Drag and drop the archive you with to sign onto this area.
                  </label>
                  <FileUpload
                    files={Array []}
                    onFileAccepted={[Function]}
                  />
                </li>,
                <li>
                  <p>
                    What is the deployment platform this archive is meant for?
                  </p>
                  <ul
                    className="flex-inner"
                  >
                    <li>
                      <input
                        id="platform-ios"
                        name="platform"
                        onChange={[Function]}
                        type="radio"
                        value="ios"
                      />
                      <label
                        htmlFor="platform-ios"
                      >
                        iOS
                      </label>
                    </li>
                    <li>
                      <input
                        id="platform-android"
                        name="platform"
                        onChange={[Function]}
                        type="radio"
                        value="android"
                      />
                      <label
                        htmlFor="platform-android"
                      >
                        Android
                      </label>
                    </li>
                  </ul>
                </li>,
                <li>
                  <p>
                    You must complete a STRA & PIA before your production release.
                  </p>
                  <ul
                    className="flex-inner"
                  >
                    <li>
                      <input
                        id="i-agree"
                        name="i-agree"
                        onChange={[Function]}
                        type="checkbox"
                        value="agree"
                      />
                      <label
                        htmlFor="i-agree"
                      >
                        Yes, I will
                      </label>
                    </li>
                  </ul>
                </li>,
                <li>
                  <button
                    onClick={[Function]}
                  >
                    Start
                  </button>
                </li>,
              ],
              "className": "flex-outer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label>
                      Drag and drop the archive you with to sign onto this area.
                    </label>,
                    <FileUpload
                      files={Array []}
                      onFileAccepted={[Function]}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Drag and drop the archive you with to sign onto this area.",
                    },
                    "ref": null,
                    "rendered": "Drag and drop the archive you with to sign onto this area.",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "files": Array [],
                      "onFileAccepted": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p>
                      What is the deployment platform this archive is meant for?
                    </p>,
                    <ul
                      className="flex-inner"
                    >
                      <li>
                        <input
                          id="platform-ios"
                          name="platform"
                          onChange={[Function]}
                          type="radio"
                          value="ios"
                        />
                        <label
                          htmlFor="platform-ios"
                        >
                          iOS
                        </label>
                      </li>
                      <li>
                        <input
                          id="platform-android"
                          name="platform"
                          onChange={[Function]}
                          type="radio"
                          value="android"
                        />
                        <label
                          htmlFor="platform-android"
                        >
                          Android
                        </label>
                      </li>
                    </ul>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "What is the deployment platform this archive is meant for?",
                    },
                    "ref": null,
                    "rendered": "What is the deployment platform this archive is meant for?",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <li>
                          <input
                            id="platform-ios"
                            name="platform"
                            onChange={[Function]}
                            type="radio"
                            value="ios"
                          />
                          <label
                            htmlFor="platform-ios"
                          >
                            iOS
                          </label>
                        </li>,
                        <li>
                          <input
                            id="platform-android"
                            name="platform"
                            onChange={[Function]}
                            type="radio"
                            value="android"
                          />
                          <label
                            htmlFor="platform-android"
                          >
                            Android
                          </label>
                        </li>,
                      ],
                      "className": "flex-inner",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <input
                              id="platform-ios"
                              name="platform"
                              onChange={[Function]}
                              type="radio"
                              value="ios"
                            />,
                            <label
                              htmlFor="platform-ios"
                            >
                              iOS
                            </label>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "id": "platform-ios",
                              "name": "platform",
                              "onChange": [Function],
                              "type": "radio",
                              "value": "ios",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "input",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "iOS",
                              "htmlFor": "platform-ios",
                            },
                            "ref": null,
                            "rendered": "iOS",
                            "type": "label",
                          },
                        ],
                        "type": "li",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <input
                              id="platform-android"
                              name="platform"
                              onChange={[Function]}
                              type="radio"
                              value="android"
                            />,
                            <label
                              htmlFor="platform-android"
                            >
                              Android
                            </label>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "id": "platform-android",
                              "name": "platform",
                              "onChange": [Function],
                              "type": "radio",
                              "value": "android",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "input",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Android",
                              "htmlFor": "platform-android",
                            },
                            "ref": null,
                            "rendered": "Android",
                            "type": "label",
                          },
                        ],
                        "type": "li",
                      },
                    ],
                    "type": "ul",
                  },
                ],
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p>
                      You must complete a STRA & PIA before your production release.
                    </p>,
                    <ul
                      className="flex-inner"
                    >
                      <li>
                        <input
                          id="i-agree"
                          name="i-agree"
                          onChange={[Function]}
                          type="checkbox"
                          value="agree"
                        />
                        <label
                          htmlFor="i-agree"
                        >
                          Yes, I will
                        </label>
                      </li>
                    </ul>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "You must complete a STRA & PIA before your production release.",
                    },
                    "ref": null,
                    "rendered": "You must complete a STRA & PIA before your production release.",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <li>
                        <input
                          id="i-agree"
                          name="i-agree"
                          onChange={[Function]}
                          type="checkbox"
                          value="agree"
                        />
                        <label
                          htmlFor="i-agree"
                        >
                          Yes, I will
                        </label>
                      </li>,
                      "className": "flex-inner",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <input
                            id="i-agree"
                            name="i-agree"
                            onChange={[Function]}
                            type="checkbox"
                            value="agree"
                          />,
                          <label
                            htmlFor="i-agree"
                          >
                            Yes, I will
                          </label>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "id": "i-agree",
                            "name": "i-agree",
                            "onChange": [Function],
                            "type": "checkbox",
                            "value": "agree",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "input",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Yes, I will",
                            "htmlFor": "i-agree",
                          },
                          "ref": null,
                          "rendered": "Yes, I will",
                          "type": "label",
                        },
                      ],
                      "type": "li",
                    },
                    "type": "ul",
                  },
                ],
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    onClick={[Function]}
                  >
                    Start
                  </button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Start",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Start",
                  "type": "button",
                },
                "type": "li",
              },
            ],
            "type": "ul",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "job": Object {
                "status": "testStatus",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Instruction />,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header
            authentication={
              Object {
                "isAuthenticated": true,
              }
            }
          />,
          <div
            className="container"
          >
            <ul
              className="flex-outer"
            >
              <li>
                <label>
                  Drag and drop the archive you with to sign onto this area.
                </label>
                <FileUpload
                  files={Array []}
                  onFileAccepted={[Function]}
                />
              </li>
              <li>
                <p>
                  What is the deployment platform this archive is meant for?
                </p>
                <ul
                  className="flex-inner"
                >
                  <li>
                    <input
                      id="platform-ios"
                      name="platform"
                      onChange={[Function]}
                      type="radio"
                      value="ios"
                    />
                    <label
                      htmlFor="platform-ios"
                    >
                      iOS
                    </label>
                  </li>
                  <li>
                    <input
                      id="platform-android"
                      name="platform"
                      onChange={[Function]}
                      type="radio"
                      value="android"
                    />
                    <label
                      htmlFor="platform-android"
                    >
                      Android
                    </label>
                  </li>
                </ul>
              </li>
              <li>
                <p>
                  You must complete a STRA & PIA before your production release.
                </p>
                <ul
                  className="flex-inner"
                >
                  <li>
                    <input
                      id="i-agree"
                      name="i-agree"
                      onChange={[Function]}
                      type="checkbox"
                      value="agree"
                    />
                    <label
                      htmlFor="i-agree"
                    >
                      Yes, I will
                    </label>
                  </li>
                </ul>
              </li>
              <li>
                <button
                  onClick={[Function]}
                >
                  Start
                </button>
              </li>
            </ul>
            <JobStatusIndicator
              job={
                Object {
                  "status": "testStatus",
                }
              }
            />
          </div>,
          <div
            className="container"
          >
            <Instruction />
          </div>,
          <Footer />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "authentication": Object {
              "isAuthenticated": true,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ul
                className="flex-outer"
              >
                <li>
                  <label>
                    Drag and drop the archive you with to sign onto this area.
                  </label>
                  <FileUpload
                    files={Array []}
                    onFileAccepted={[Function]}
                  />
                </li>
                <li>
                  <p>
                    What is the deployment platform this archive is meant for?
                  </p>
                  <ul
                    className="flex-inner"
                  >
                    <li>
                      <input
                        id="platform-ios"
                        name="platform"
                        onChange={[Function]}
                        type="radio"
                        value="ios"
                      />
                      <label
                        htmlFor="platform-ios"
                      >
                        iOS
                      </label>
                    </li>
                    <li>
                      <input
                        id="platform-android"
                        name="platform"
                        onChange={[Function]}
                        type="radio"
                        value="android"
                      />
                      <label
                        htmlFor="platform-android"
                      >
                        Android
                      </label>
                    </li>
                  </ul>
                </li>
                <li>
                  <p>
                    You must complete a STRA & PIA before your production release.
                  </p>
                  <ul
                    className="flex-inner"
                  >
                    <li>
                      <input
                        id="i-agree"
                        name="i-agree"
                        onChange={[Function]}
                        type="checkbox"
                        value="agree"
                      />
                      <label
                        htmlFor="i-agree"
                      >
                        Yes, I will
                      </label>
                    </li>
                  </ul>
                </li>
                <li>
                  <button
                    onClick={[Function]}
                  >
                    Start
                  </button>
                </li>
              </ul>,
              <JobStatusIndicator
                job={
                  Object {
                    "status": "testStatus",
                  }
                }
              />,
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <li>
                    <label>
                      Drag and drop the archive you with to sign onto this area.
                    </label>
                    <FileUpload
                      files={Array []}
                      onFileAccepted={[Function]}
                    />
                  </li>,
                  <li>
                    <p>
                      What is the deployment platform this archive is meant for?
                    </p>
                    <ul
                      className="flex-inner"
                    >
                      <li>
                        <input
                          id="platform-ios"
                          name="platform"
                          onChange={[Function]}
                          type="radio"
                          value="ios"
                        />
                        <label
                          htmlFor="platform-ios"
                        >
                          iOS
                        </label>
                      </li>
                      <li>
                        <input
                          id="platform-android"
                          name="platform"
                          onChange={[Function]}
                          type="radio"
                          value="android"
                        />
                        <label
                          htmlFor="platform-android"
                        >
                          Android
                        </label>
                      </li>
                    </ul>
                  </li>,
                  <li>
                    <p>
                      You must complete a STRA & PIA before your production release.
                    </p>
                    <ul
                      className="flex-inner"
                    >
                      <li>
                        <input
                          id="i-agree"
                          name="i-agree"
                          onChange={[Function]}
                          type="checkbox"
                          value="agree"
                        />
                        <label
                          htmlFor="i-agree"
                        >
                          Yes, I will
                        </label>
                      </li>
                    </ul>
                  </li>,
                  <li>
                    <button
                      onClick={[Function]}
                    >
                      Start
                    </button>
                  </li>,
                ],
                "className": "flex-outer",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label>
                        Drag and drop the archive you with to sign onto this area.
                      </label>,
                      <FileUpload
                        files={Array []}
                        onFileAccepted={[Function]}
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Drag and drop the archive you with to sign onto this area.",
                      },
                      "ref": null,
                      "rendered": "Drag and drop the archive you with to sign onto this area.",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "files": Array [],
                        "onFileAccepted": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p>
                        What is the deployment platform this archive is meant for?
                      </p>,
                      <ul
                        className="flex-inner"
                      >
                        <li>
                          <input
                            id="platform-ios"
                            name="platform"
                            onChange={[Function]}
                            type="radio"
                            value="ios"
                          />
                          <label
                            htmlFor="platform-ios"
                          >
                            iOS
                          </label>
                        </li>
                        <li>
                          <input
                            id="platform-android"
                            name="platform"
                            onChange={[Function]}
                            type="radio"
                            value="android"
                          />
                          <label
                            htmlFor="platform-android"
                          >
                            Android
                          </label>
                        </li>
                      </ul>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "What is the deployment platform this archive is meant for?",
                      },
                      "ref": null,
                      "rendered": "What is the deployment platform this archive is meant for?",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <li>
                            <input
                              id="platform-ios"
                              name="platform"
                              onChange={[Function]}
                              type="radio"
                              value="ios"
                            />
                            <label
                              htmlFor="platform-ios"
                            >
                              iOS
                            </label>
                          </li>,
                          <li>
                            <input
                              id="platform-android"
                              name="platform"
                              onChange={[Function]}
                              type="radio"
                              value="android"
                            />
                            <label
                              htmlFor="platform-android"
                            >
                              Android
                            </label>
                          </li>,
                        ],
                        "className": "flex-inner",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <input
                                id="platform-ios"
                                name="platform"
                                onChange={[Function]}
                                type="radio"
                                value="ios"
                              />,
                              <label
                                htmlFor="platform-ios"
                              >
                                iOS
                              </label>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "id": "platform-ios",
                                "name": "platform",
                                "onChange": [Function],
                                "type": "radio",
                                "value": "ios",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "input",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "iOS",
                                "htmlFor": "platform-ios",
                              },
                              "ref": null,
                              "rendered": "iOS",
                              "type": "label",
                            },
                          ],
                          "type": "li",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <input
                                id="platform-android"
                                name="platform"
                                onChange={[Function]}
                                type="radio"
                                value="android"
                              />,
                              <label
                                htmlFor="platform-android"
                              >
                                Android
                              </label>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "id": "platform-android",
                                "name": "platform",
                                "onChange": [Function],
                                "type": "radio",
                                "value": "android",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "input",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Android",
                                "htmlFor": "platform-android",
                              },
                              "ref": null,
                              "rendered": "Android",
                              "type": "label",
                            },
                          ],
                          "type": "li",
                        },
                      ],
                      "type": "ul",
                    },
                  ],
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p>
                        You must complete a STRA & PIA before your production release.
                      </p>,
                      <ul
                        className="flex-inner"
                      >
                        <li>
                          <input
                            id="i-agree"
                            name="i-agree"
                            onChange={[Function]}
                            type="checkbox"
                            value="agree"
                          />
                          <label
                            htmlFor="i-agree"
                          >
                            Yes, I will
                          </label>
                        </li>
                      </ul>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "You must complete a STRA & PIA before your production release.",
                      },
                      "ref": null,
                      "rendered": "You must complete a STRA & PIA before your production release.",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <li>
                          <input
                            id="i-agree"
                            name="i-agree"
                            onChange={[Function]}
                            type="checkbox"
                            value="agree"
                          />
                          <label
                            htmlFor="i-agree"
                          >
                            Yes, I will
                          </label>
                        </li>,
                        "className": "flex-inner",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <input
                              id="i-agree"
                              name="i-agree"
                              onChange={[Function]}
                              type="checkbox"
                              value="agree"
                            />,
                            <label
                              htmlFor="i-agree"
                            >
                              Yes, I will
                            </label>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "id": "i-agree",
                              "name": "i-agree",
                              "onChange": [Function],
                              "type": "checkbox",
                              "value": "agree",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "input",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Yes, I will",
                              "htmlFor": "i-agree",
                            },
                            "ref": null,
                            "rendered": "Yes, I will",
                            "type": "label",
                          },
                        ],
                        "type": "li",
                      },
                      "type": "ul",
                    },
                  ],
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      onClick={[Function]}
                    >
                      Start
                    </button>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Start",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Start",
                    "type": "button",
                  },
                  "type": "li",
                },
              ],
              "type": "ul",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "job": Object {
                  "status": "testStatus",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Instruction />,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
